#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_BUILD_GNU_TYPE      := $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_GNU_TYPE       := $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)

tarball := $(wildcard zlib-*.tar.gz)
patch   := $(wildcard zlib-*.patch.bz2)

srcdir  := $(shell echo $(tarball) | sed -e 's/\.tar\.gz//')

# FIXME: one-char vars are evil, even more than emacs.
D := $(CURDIR)/debian/zlib-m68k-atari-mint

INSTALL_DIR := /usr/m68k-atari-mint
COMMON_CFLAGS := -O3 -fomit-frame-pointer

unpack-m68000: unpack-m68000-stamp
unpack-m68000-stamp:
	dh_testdir

	tar zxf $(tarball)
	mv $(srcdir) build-m68000

ifneq (, $(patch))
	cd build-m68000 && \
		bzcat ../$(patch) | patch -p1
endif

	touch unpack-m68000-stamp

unpack-m68020-60: unpack-m68020-60-stamp
unpack-m68020-60-stamp:
	dh_testdir

	tar zxf $(tarball)
	mv $(srcdir) build-m68020-60

ifneq (, $(patch))
	cd build-m68020-60 && \
		bzcat ../$(patch) | patch -p1
endif

	touch unpack-m68020-60-stamp

unpack-m5475: unpack-m5475-stamp
unpack-m5475-stamp:
	dh_testdir

	tar zxf $(tarball)
	mv $(srcdir) build-m5475

ifneq (, $(patch))
	cd build-m5475 && \
		bzcat ../$(patch) | patch -p1
endif

	touch unpack-m5475-stamp

unpack: unpack-m68000 unpack-m68020-60 unpack-m5475

configure-m68000: unpack-m68000 configure-m68000-stamp
configure-m68000-stamp:
	dh_testdir

	cd build-m68000 && \
		sed -i 's: -[LI][^ ]*::g' zlib.pc.in && \
		sed -i 's:Z_U4=`./$$test`:Z_U4="unsigned long":g' configure && \
		CHOST=m68k-atari-mint CFLAGS="$(COMMON_CFLAGS)" ./configure --prefix=$(INSTALL_DIR)

	touch configure-m68000-stamp

configure-m68020-60: unpack-m68020-60 configure-m68020-60-stamp
configure-m68020-60-stamp:
	dh_testdir

	cd build-m68020-60 && \
		sed -i 's: -[LI][^ ]*::g' zlib.pc.in && \
		sed -i 's:Z_U4=`./$$test`:Z_U4="unsigned long":g' configure && \
		CHOST=m68k-atari-mint CFLAGS="-m68020-60 $(COMMON_CFLAGS)" ./configure --prefix=$(INSTALL_DIR) --libdir='$${exec_prefix}/lib/m68020-60'

	touch configure-m68020-60-stamp

configure-m5475: unpack-m5475 configure-m5475-stamp
configure-m5475-stamp:
	dh_testdir

	cd build-m5475 && \
		sed -i 's: -[LI][^ ]*::g' zlib.pc.in && \
		sed -i 's:Z_U4=`./$$test`:Z_U4="unsigned long":g' configure && \
		CHOST=m68k-atari-mint CFLAGS="-mcpu=5475 $(COMMON_CFLAGS)" ./configure --prefix=$(INSTALL_DIR) --libdir='$${exec_prefix}/lib/m5475'

	touch configure-m5475-stamp

configure: configure-m68000 configure-m68020-60 configure-m5475

build-m68000: configure-m68000 build-m68000-stamp
build-m68000-stamp:
	dh_testdir
	cd build-m68000 && \
		$(MAKE)
	touch build-m68000-stamp

build-m68020-60: configure-m68020-60 build-m68020-60-stamp
build-m68020-60-stamp:
	dh_testdir
	cd build-m68020-60 && \
		$(MAKE)
	touch build-m68020-60-stamp

build-m5475: configure-m5475 build-m5475-stamp
build-m5475-stamp:
	dh_testdir
	cd build-m5475 && \
		$(MAKE)
	touch build-m5475-stamp

build: build-m68000 build-m68020-60 build-m5475

install-m68000: build-m68000 install-m68000-stamp
install-m68000-stamp:
	dh_testdir
	dh_testroot
	dh_installdirs

	cd build-m68000 && \
		$(MAKE) install DESTDIR=$(D)

	touch install-m68000-stamp

install-m68020-60: install-m68000 build-m68020-60 install-m68020-60-stamp
install-m68020-60-stamp:
	dh_testdir
	dh_testroot
	dh_installdirs

	cd build-m68020-60 && \
		$(MAKE) install-libs DESTDIR=$(D)

	touch install-m68020-60-stamp

install-m5475: install-m68000 build-m5475 install-m5475-stamp
install-m5475-stamp:
	dh_testdir
	dh_testroot
	dh_installdirs

	cd build-m5475 && \
		$(MAKE) install-libs DESTDIR=$(D)

	touch install-m5475-stamp

install: install-m68000 install-m68020-60 install-m5475
	# Cleanup
	find  $(D)/usr/m68k-atari-mint/lib -name '*.a' -print -exec m68k-atari-mint-strip -S -x '{}' ';'

clean:
	dh_testdir
	dh_testroot
	rm -rf build-*
	rm -f build-*-stamp configure-*-stamp install-*-stamp patch-stamp unpack-*-stamp

	dh_clean

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installdocs
#	dh_installexamples
#	dh_installmenu
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
	dh_installman
#	dh_installinfo
	dh_installchangelogs
	dh_link
#	dh_strip
	dh_compress `cd $(D) && find usr/m68k-atari-mint/share/man -type f`
	dh_fixperms
#	dh_makeshlibs
	dh_installdeb
#	dh_perl
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build build-m68000 build-m68020-60 build-m5475 clean binary-indep binary-arch binary install configure
